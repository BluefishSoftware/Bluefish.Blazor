@inherits BfComponentBase
@typeparam TItem
@typeparam TKey
@using Bluefish.Blazor.Models

<table @attributes="ActualAttributes">
    @if (ShowHeader)
    {
        <thead>
            <tr>
                @if(!_isLoading && _dataItems.Count() > 0 && SelectionMode == SelectionModes.Multiple && ShowCheckboxes)
                {
                    <th>
                        <BfCheckBox Value="@(GetItemKey != null && _dataItems.Count() > 0 && _dataItems.All(x => _selectedKeys.Contains(GetItemKey(x))))"
                                    ValueChanged="@((x) => OnAllCheckboxInput(x))"
                                    StopPropagation="true" />
                    </th>
                }
                @foreach (var col in VisibleColumns)
                {
                    <th class="@col.GetHeaderCssClass(this)" @onclick="() => OnColumnHeaderClick(col)">
                        <span title="@col.HeaderToolTip">@col.HeaderText</span>
                        @if (AllowSort && SortInfo != null && col.IsSortable && col.Id == SortInfo?.ColumnId)
                        {
                            @if (SortInfo.Direction == SortDirections.Ascending)
                            {
                                <i class="ml-1 fas fa-fw fa-sort-amount-up-alt" title="Ascending order" />
                            }
                            else
                            {
                                <i class="ml-1 fas fa-fw fa-sort-amount-down" title="Descending order" />
                            }
                        }
                    </th>
                }
            </tr>
        </thead>
    }
    <tbody>
        @if (_isLoading)
        {
            <tr>
                <td colspan="@(VisibleColumns.Length + (SelectionMode == SelectionModes.Multiple && ShowCheckboxes ? 1 : 0))">
                    <div class="table-spinner">
                        <BfSpinner />
                    </div>
                </td>
            </tr>
        }
        else if (_dataItems.Count() == 0)
        {
            <tr>
                <td colspan="@(VisibleColumns.Length + (SelectionMode == SelectionModes.Multiple && ShowCheckboxes ? 1 : 0))">
                    @if (NoDataTemplate is null)
                    {
                        <div class="text-center">No data</div>
                    }
                    else
                    {
                        @NoDataTemplate
                    }
                </td>
            </tr>
        }
        else
        {
            foreach (var item in _dataItems)
            {
                <tr class="@(TrCssClass?.Invoke(item)) @(GetSelectionCssClass(item))"
                    @onclick="@((e) => OnRowClickAsync(e, item))"
                    @ondblclick="@((e) => OnRowDoubleClickAsync(e, item))">

                    @if (SelectionMode == SelectionModes.Multiple && ShowCheckboxes)
                    {
                        <td>
                            <BfCheckBox Value="@(_selectedKeys.Contains(GetItemKey(item)))"
                                        ValueChanged="@((chk) => OnItemCheckChange(item, chk))"
                                        StopPropagation="true" />
                        </td>
                    }

                    @foreach (var col in VisibleColumns)
                    {
                        <td class="@col.GetBodyCssClass()"
                            title="@col?.ToolTip?.Invoke(item)">
                            @if (col.Template is null)
                            {
                                @col.FormatValue(item)
                            }
                            else
                            {
                                @col.Template(item)
                            }
                        </td>
                    }
                </tr>
            }
        }
    </tbody>
    @if (ShowSummaryRow && GetFooterTextAsync != null)
    {
        <tfoot>
            <tr>
                @foreach (var col in VisibleColumns)
                {
                    <th class="@col.GetFooterCssClass()">
                        <span>@(GetFooterTextAsync(col, _dataItems))</span>
                    </th>
                }
            </tr>
        </tfoot>
    }
</table>

@if (ShowPager)
{
    <div class="bottom-pager pt-2">
        <BfPager PageInfo="PageInfo"
                 PageSizes="@WebConstants.DEFAULT_PAGE_SIZES"
                 Size="Size" />
    </div>
}

<CascadingValue Value="(BfTable<TItem, TKey>)this" Name="Table">
    @ChildContent
</CascadingValue>
